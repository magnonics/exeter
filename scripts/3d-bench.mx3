// Standard problem #4, modified for 3D problem
//
// The bigger the problem, the longer the CPU stage takes
// With the 980Ti at the biggest possible problems, the CPU stage uses no more than 8GB and doesn't take long
// If running lots of small simulations, the CPU stage becomes much more significant
//
// to-do:
// * Add in loop to test all different sizes etc
// * Where is all that CPU and RAM load going?
//
// 512x512x512 - failed, crashes system
// 256x256x256 - 5134MB, 99% - 16.8mil cells
// 128x128x128 - 1024MB, 98% - 2mil cells, biggest-doable 3D problem, fully stresses card
// 64x64x64    - 512MB, 92%
// 8192x8192x1 - 5989MB, failed, OUT_OF_MEMORY
// 4096x4096x1 - 3480MB, 99% - maximum 2D problem, 16mil cells
// 2048x2048x1 - 1051MB, 99% - 4mil cells, probably the largest you'd want to do, fully stresses card
// 1024x1024x1 - 649MB, 96% - 1mil cells, uses full capability of card with minimal computation time
// 1024x512x1  - 368MB, 93% - 0.5mil cells,
// 512x512x1   - 342MB, 88%/70% memory - 0.26mil cells
// 256x256x1   - 308MB, 66% - memory load is tiny here, use grids bigger than this on this GPU
// 16384x32x32 - 4985MB, 99% - Seems to be maxing out, slowing down OS gui
// 16384x64x2  - 780MB, 98%
// 4096x1024x8 - OUT_OF_MEMORY - 33.6mil cells
// 1024x1024x16 - 4987MB, 99% - 16.8mil cells, maxing the GPU
// 512x512x4   - 547MB, 97% - 1mil cells
// 512x512x8   - 866MB, 99% - 2mil cells
// 2048x2048x5 - 5809MB, 99% - 21mil cells

// Performance tests - Shows linear dependance of runtime on number of cells
// 256x256x2   - 0.13mil cells, 5 mins
// 256x256x8   - 0.52mil cells, 23 mins
// 256x256x16  - 1.05mil cells, 46 mins
// 256x256x32  - 2.10mil cells, 89 mins
// 256x256x256 - 16.8mil cells, 830 mins

SnapshotFormat = "png"

// 128x128x128 cells, each cell 1nm in size
gr := 0
ce := 1e-9

SetGridsize(256, 256, 256)
SetCellsize(ce, ce, ce)

Msat  = 800e3
Aex   = 13e-12
alpha = 0.02
m = uniform(1, 1, 1)
B_ext = vector(-24.6E-3, 4.3E-3, 0)

autosnapshot(m, 1e-12)
run(1.2e-9)
